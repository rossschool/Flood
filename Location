//
//  ContentView.swift
//  openeather
//
//  Created by Dinh Dinh Le on 5/9/23.
//

import SwiftUI
import SDWebImageSwiftUI

struct ContentView: View {
    @State private var temperature: Double?
    @State private var cityName: String?

    let apiKey = "6b3390fa0de8883b96e2a1eea4433281"
    let latitude = "40.9695"
    let longitude = "-72.2418"
        
        var body: some View {
            VStack {
                if let temperature = temperature, let cityName = cityName {
                    Text("\(cityName)")
                        .font(.title)
                        .padding()
                    
                    Text("\(temperature)Â°F")
                        .font(.title)
                    
                    Spacer()
                } else {
                    Text("Loading...")
                }
            }
            .onAppear {
                getWeatherData()
            }
        }
        
        func getWeatherData() {
            guard let weatherURL = URL(string: "https://api.openweathermap.org/data/2.5/weather?lat=\(latitude)&lon=\(longitude)&appid=\(apiKey)&units=imperial") else {
                return
            }
            URLSession.shared.dataTask(with: weatherURL) { data, response, error in
                guard let data = data, error == nil else {
                    print("Error fetching weather data: \(error?.localizedDescription ?? "unknown error")")
                    return
                }
                do {
                    let decoder = JSONDecoder()
                    let result = try decoder.decode(WeatherResult.self, from: data)
                    DispatchQueue.main.async {
                        self.temperature = result.main.temp
                    }
                    getCityNameFromCoordinates(latitude: result.coord.lat, longitude: result.coord.lon) { cityName in
                        DispatchQueue.main.async {
                            self.cityName = cityName
                        }
                    }
                    print("Weather data: \(result)")
                } catch let error {
                    print("Error parsing weather data: \(error.localizedDescription)")
                }
            }.resume()
        }
        
        func getCityNameFromCoordinates(latitude: Double, longitude: Double, completion: @escaping (String?) -> Void) {
            guard let reverseGeocodeURL = URL(string: "https://api.openweathermap.org/geo/1.0/reverse?lat=\(latitude)&lon=\(longitude)&limit=1&appid=\(apiKey)") else {
                completion(nil)
                return
            }
            URLSession.shared.dataTask(with: reverseGeocodeURL) { data, response, error in
                guard let data = data, error == nil else {
                    print("Error fetching city name: \(error?.localizedDescription ?? "unknown error")")
                    completion(nil)
                    return
                }
                do {
                    let decoder = JSONDecoder()
                    let result = try decoder.decode([ReverseGeocodeResult].self, from: data)
                    let cityName = result.first?.name
                    completion(cityName)
                } catch let error {
                    print("Error parsing city name: \(error.localizedDescription)")
                    completion(nil)
                }
            }.resume()
        }
    }

    struct ReverseGeocodeResult: Codable {
        let name: String
    }

    struct WeatherResult: Codable {
        let coord: Coord
        let main: Main
    }

    struct Coord: Codable {
        let lat: Double
        let lon: Double
    }

    struct Main: Codable {
        let temp: Double
    }

    struct ContentView_Previews: PreviewProvider {
        static var previews: some View {
            ContentView()
        }
    }
