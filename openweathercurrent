import SwiftUI
import SDWebImageSwiftUI

struct ContentView: View {
    
    //@State private var weatherData = WeatherData(temperature: 0, description: "", icon: "")
    @State private var weatherData: WeatherData?
    @State private var weatherIcon: UIImage?
    
    let apiKey = "API KEY"
    let city = "New York"
    
    var body: some View {
          VStack {
              if let data = weatherData, let icon = weatherIcon {
                  Text("Current Weather for \(city)")
                      .font(.title)
                      .padding()
                  
                  Image(uiImage: icon)
                      .resizable()
                      .aspectRatio(contentMode: .fit)
                      .frame(width: 100, height: 100)
                  
                  Text("\(data.temperature)Â°F")
                      .font(.title)
                  
                  Text(data.description)
                  
                  Spacer()
              } else {
                  Text("Loading...")
              }
          }
          .onAppear {
              getWeatherData()
          }
      }
      
      func getWeatherData() {
          //let urlString = "https://api.openweathermap.org/data/2.5/weather?q=\(city)&units=imperial&appid=\(apiKey)"
          let urlString = "https://api.openweathermap.org/data/2.5/weather?q=new%20york&units=imperial&appid="
          guard let url = URL(string: urlString) else {
              return
          }
          URLSession.shared.dataTask(with: url) { data, response, error in
              guard let data = data, error == nil else {
                  print("Error fetching weather data: \(error?.localizedDescription ?? "unknown error")")
                  return
              }
              if let jsonString = String(data: data, encoding: .utf8) {
                  print("Received JSON: \(jsonString)")
              }
              do {
                  let decoder = JSONDecoder()
                  let result = try decoder.decode(WeatherResult.self, from: data)
                  DispatchQueue.main.async {
                      self.weatherData = WeatherData(
                          temperature: Int(result.main.temp),
                          description: result.weather.first?.description ?? "",
                          icon: result.weather.first?.icon ?? ""
                      )
                      if let iconCode = result.weather.first?.icon {
                          downloadWeatherIcon(iconCode: iconCode)
                      }
                  }
                  print("Weather data: \(result)")
              } catch let error {
                  print("Error parsing weather data: \(error.localizedDescription)")
              }
          }.resume()
      }
      
      func downloadWeatherIcon(iconCode: String) {
          let urlString = "https://openweathermap.org/img/wn/\(iconCode).png"
          guard let url = URL(string: urlString) else {
              return
          }
          URLSession.shared.dataTask(with: url) { data, response, error in
              guard let data = data, error == nil else {
                  print("Error downloading weather icon: \(error?.localizedDescription ?? "unknown error")")
                  return
              }
              if let icon = UIImage(data: data) {
                  DispatchQueue.main.async {
                      self.weatherIcon = icon
                  }
              }
          }.resume()
      }
  }

  struct WeatherData {
      let temperature: Int
      let description: String
      let icon: String
  }

  struct WeatherResult: Codable {
      let main: Main
      let weather: [Weather]
  }

  struct Main: Codable {
      let temp: Double
  }

  struct Weather: Codable {
      let description: String
      let icon: String
  }

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
